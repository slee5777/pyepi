[
  {
    "objectID": "core.html",
    "href": "core.html",
    "title": "core",
    "section": "",
    "text": "source\n\nfoo\n\n foo ()"
  },
  {
    "objectID": "moving_averages.html",
    "href": "moving_averages.html",
    "title": "Moving Average",
    "section": "",
    "text": "import pandas as pd\nimport numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\nimport matplotlib.style as style"
  },
  {
    "objectID": "moving_averages.html#data",
    "href": "moving_averages.html#data",
    "title": "Moving Average",
    "section": "Data",
    "text": "Data\nImport data from https://github.com/appliedepi/epiRhandbook_eng/blob/master/data/linelist_cleaned.xlsx and then save under “epiRhandbook_data” folder.\nNote: Installation of “openpyxl” is required.\n\nlinelist = pd.read_excel('epiRhandbook_data/linelist_cleaned.xlsx')\n\n\nNo_of_line_display = 5\nlinelist.head(No_of_line_display)\n\n\n\n\n\n  \n    \n      \n      case_id\n      generation\n      date_infection\n      date_onset\n      date_hospitalisation\n      date_outcome\n      outcome\n      gender\n      age\n      age_unit\n      age_years\n      age_cat\n      age_cat5\n      hospital\n      lon\n      lat\n      infector\n      source\n      wt_kg\n      ht_cm\n      ct_blood\n      fever\n      chills\n      cough\n      aches\n      vomit\n      temp\n      time_admission\n      bmi\n      days_onset_hosp\n    \n  \n  \n    \n      0\n      5fe599\n      4\n      2014-05-08\n      2014-05-13\n      2014-05-15\n      NaT\n      NaN\n      m\n      2.0\n      years\n      2.0\n      0-4\n      0-4\n      Other\n      -13.215735\n      8.468973\n      f547d6\n      other\n      27\n      48\n      22\n      no\n      no\n      yes\n      no\n      yes\n      36.8\n      NaN\n      117.187500\n      2.0\n    \n    \n      1\n      8689b7\n      4\n      NaT\n      2014-05-13\n      2014-05-14\n      2014-05-18\n      Recover\n      f\n      3.0\n      years\n      3.0\n      0-4\n      0-4\n      Missing\n      -13.215234\n      8.451719\n      NaN\n      NaN\n      25\n      59\n      22\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      36.9\n      09:36\n      71.818443\n      1.0\n    \n    \n      2\n      11f8ea\n      2\n      NaT\n      2014-05-16\n      2014-05-18\n      2014-05-30\n      Recover\n      m\n      56.0\n      years\n      56.0\n      50-69\n      55-59\n      St. Mark's Maternity Hospital (SMMH)\n      -13.212911\n      8.464817\n      NaN\n      NaN\n      91\n      238\n      21\n      NaN\n      NaN\n      NaN\n      NaN\n      NaN\n      36.9\n      16:48\n      16.065250\n      2.0\n    \n    \n      3\n      b8812a\n      3\n      2014-05-04\n      2014-05-18\n      2014-05-20\n      NaT\n      NaN\n      f\n      18.0\n      years\n      18.0\n      15-19\n      15-19\n      Port Hospital\n      -13.236371\n      8.475476\n      f90f5f\n      other\n      41\n      135\n      23\n      no\n      no\n      no\n      no\n      no\n      36.8\n      11:22\n      22.496571\n      2.0\n    \n    \n      4\n      893f25\n      3\n      2014-05-18\n      2014-05-21\n      2014-05-22\n      2014-05-29\n      Recover\n      m\n      3.0\n      years\n      3.0\n      0-4\n      0-4\n      Military Hospital\n      -13.222864\n      8.460824\n      11f8ea\n      other\n      36\n      71\n      23\n      no\n      no\n      yes\n      no\n      yes\n      36.9\n      12:60\n      71.414402\n      1.0\n    \n  \n\n\n\n\n\nBrowse data\n\ndf_date_hosp = pd.DataFrame(list(zip(linelist['date_hospitalisation'], linelist['case_id'])), columns=['date_hospitalisation', 'case_id'])\ndf_date_hosp\n\n\n\n\n\n  \n    \n      \n      date_hospitalisation\n      case_id\n    \n  \n  \n    \n      0\n      2014-05-15\n      5fe599\n    \n    \n      1\n      2014-05-14\n      8689b7\n    \n    \n      2\n      2014-05-18\n      11f8ea\n    \n    \n      3\n      2014-05-20\n      b8812a\n    \n    \n      4\n      2014-05-22\n      893f25\n    \n    \n      ...\n      ...\n      ...\n    \n    \n      5883\n      2015-04-22\n      76d8fe\n    \n    \n      5884\n      2015-04-24\n      dd6664\n    \n    \n      5885\n      2015-04-25\n      635ef3\n    \n    \n      5886\n      2015-04-26\n      4b859a\n    \n    \n      5887\n      2015-04-30\n      2068d6\n    \n  \n\n5888 rows × 2 columns\n\n\n\n\ndf_case_cnt = df_date_hosp.groupby('date_hospitalisation').count()\ndf_case_cnt = df_case_cnt.rename(columns={'case_id': 'new_cases'})\ndf_case_cnt\n\n\n\n\n\n  \n    \n      \n      new_cases\n    \n    \n      date_hospitalisation\n      \n    \n  \n  \n    \n      2014-04-17\n      1\n    \n    \n      2014-04-20\n      1\n    \n    \n      2014-04-25\n      1\n    \n    \n      2014-04-27\n      1\n    \n    \n      2014-04-29\n      1\n    \n    \n      ...\n      ...\n    \n    \n      2015-04-26\n      9\n    \n    \n      2015-04-27\n      6\n    \n    \n      2015-04-28\n      8\n    \n    \n      2015-04-29\n      8\n    \n    \n      2015-04-30\n      4\n    \n  \n\n363 rows × 1 columns\n\n\n\n\n\nwindow is the ROW and 6 prior ROWS\n\ndf_case_cnt['reg_7day'] = df_case_cnt['new_cases'].rolling(7).sum()\ndf_case_cnt.head(20)\n\n\n\n\n\n  \n    \n      \n      new_cases\n      reg_7day\n    \n    \n      date_hospitalisation\n      \n      \n    \n  \n  \n    \n      2014-04-17\n      1\n      NaN\n    \n    \n      2014-04-20\n      1\n      NaN\n    \n    \n      2014-04-25\n      1\n      NaN\n    \n    \n      2014-04-27\n      1\n      NaN\n    \n    \n      2014-04-29\n      1\n      NaN\n    \n    \n      2014-05-02\n      1\n      NaN\n    \n    \n      2014-05-04\n      1\n      7.0\n    \n    \n      2014-05-05\n      1\n      7.0\n    \n    \n      2014-05-06\n      2\n      8.0\n    \n    \n      2014-05-08\n      2\n      9.0\n    \n    \n      2014-05-09\n      1\n      9.0\n    \n    \n      2014-05-10\n      3\n      11.0\n    \n    \n      2014-05-11\n      1\n      11.0\n    \n    \n      2014-05-13\n      4\n      14.0\n    \n    \n      2014-05-14\n      3\n      16.0\n    \n    \n      2014-05-15\n      2\n      16.0\n    \n    \n      2014-05-16\n      2\n      16.0\n    \n    \n      2014-05-17\n      2\n      17.0\n    \n    \n      2014-05-18\n      3\n      17.0\n    \n    \n      2014-05-20\n      4\n      20.0\n    \n  \n\n\n\n\n\ndf_case_cnt.plot(y='new_cases')\ndf_case_cnt.plot(y='reg_7day')\n\n<AxesSubplot: xlabel='date_hospitalisation'>\n\n\n\n\n\n\n\n\n\n\nwindow is the Day and 6 prior days\n\ndf_case_cnt['indexed_7day'] = df_case_cnt['new_cases'].rolling('7D').sum()\ndf_case_cnt.head(20)\n\n\n\n\n\n  \n    \n      \n      new_cases\n      reg_7day\n      indexed_7day\n    \n    \n      date_hospitalisation\n      \n      \n      \n    \n  \n  \n    \n      2014-04-17\n      1\n      NaN\n      1.0\n    \n    \n      2014-04-20\n      1\n      NaN\n      2.0\n    \n    \n      2014-04-25\n      1\n      NaN\n      2.0\n    \n    \n      2014-04-27\n      1\n      NaN\n      2.0\n    \n    \n      2014-04-29\n      1\n      NaN\n      3.0\n    \n    \n      2014-05-02\n      1\n      NaN\n      3.0\n    \n    \n      2014-05-04\n      1\n      7.0\n      3.0\n    \n    \n      2014-05-05\n      1\n      7.0\n      4.0\n    \n    \n      2014-05-06\n      2\n      8.0\n      5.0\n    \n    \n      2014-05-08\n      2\n      9.0\n      7.0\n    \n    \n      2014-05-09\n      1\n      9.0\n      7.0\n    \n    \n      2014-05-10\n      3\n      11.0\n      10.0\n    \n    \n      2014-05-11\n      1\n      11.0\n      10.0\n    \n    \n      2014-05-13\n      4\n      14.0\n      11.0\n    \n    \n      2014-05-14\n      3\n      16.0\n      14.0\n    \n    \n      2014-05-15\n      2\n      16.0\n      14.0\n    \n    \n      2014-05-16\n      2\n      16.0\n      15.0\n    \n    \n      2014-05-17\n      2\n      17.0\n      14.0\n    \n    \n      2014-05-18\n      3\n      17.0\n      16.0\n    \n    \n      2014-05-20\n      4\n      20.0\n      16.0\n    \n  \n\n\n\n\n\n\nRolling by group\n\ndf_grouped_roll = pd.DataFrame(list(zip(linelist['hospital'], linelist['date_hospitalisation'], linelist['case_id'])), columns=['hospital','date_hospitalisation', 'case_id'])\ndf_grouped_roll\n\n\n\n\n\n  \n    \n      \n      hospital\n      date_hospitalisation\n      case_id\n    \n  \n  \n    \n      0\n      Other\n      2014-05-15\n      5fe599\n    \n    \n      1\n      Missing\n      2014-05-14\n      8689b7\n    \n    \n      2\n      St. Mark's Maternity Hospital (SMMH)\n      2014-05-18\n      11f8ea\n    \n    \n      3\n      Port Hospital\n      2014-05-20\n      b8812a\n    \n    \n      4\n      Military Hospital\n      2014-05-22\n      893f25\n    \n    \n      ...\n      ...\n      ...\n      ...\n    \n    \n      5883\n      Military Hospital\n      2015-04-22\n      76d8fe\n    \n    \n      5884\n      Port Hospital\n      2015-04-24\n      dd6664\n    \n    \n      5885\n      Missing\n      2015-04-25\n      635ef3\n    \n    \n      5886\n      Port Hospital\n      2015-04-26\n      4b859a\n    \n    \n      5887\n      Port Hospital\n      2015-04-30\n      2068d6\n    \n  \n\n5888 rows × 3 columns\n\n\n\n\ndf_grouped_roll['hospital'].unique()\n\narray(['Other', 'Missing', \"St. Mark's Maternity Hospital (SMMH)\",\n       'Port Hospital', 'Military Hospital', 'Central Hospital'],\n      dtype=object)\n\n\n\ndf_grouped_roll_CH = df_grouped_roll.query('hospital==\"Central Hospital\"')\ndf_grouped_roll_CH = df_grouped_roll_CH.groupby('date_hospitalisation').count()\ndf_grouped_roll_CH = df_grouped_roll_CH.rename(columns={'case_id': 'new_cases'})\ndf_grouped_roll_CH['indexed_7day'] = df_grouped_roll_CH['new_cases'].rolling('7D').mean()\ndf_grouped_roll_CH.drop('hospital', axis=1, inplace=True)\ndf_grouped_roll_CH\n\n\n\n\n\n  \n    \n      \n      new_cases\n      indexed_7day\n    \n    \n      date_hospitalisation\n      \n      \n    \n  \n  \n    \n      2014-05-06\n      1\n      1.000000\n    \n    \n      2014-05-10\n      1\n      1.000000\n    \n    \n      2014-05-13\n      1\n      1.000000\n    \n    \n      2014-05-28\n      2\n      2.000000\n    \n    \n      2014-06-06\n      1\n      1.000000\n    \n    \n      ...\n      ...\n      ...\n    \n    \n      2015-04-21\n      1\n      1.333333\n    \n    \n      2015-04-22\n      1\n      1.250000\n    \n    \n      2015-04-23\n      1\n      1.200000\n    \n    \n      2015-04-26\n      2\n      1.400000\n    \n    \n      2015-04-28\n      3\n      1.750000\n    \n  \n\n216 rows × 2 columns\n\n\n\n\ndef groupby_hosp_7mean(df, hosp_name):\n    df = df.query(f'hospital==\"{hosp_name}\"')  ## important to have the double quote outside the input variable \n    df = df.groupby('date_hospitalisation').count()\n    df = df.rename(columns={'case_id': 'new_cases'})\n    df['indexed_7day'] = df['new_cases'].rolling('7D').mean()  # 7 refers to 7 index or '7D' refers to 7 days (only use 7D only if no dates are absent)\n    df.drop('hospital', axis=1, inplace=True)\n    df = df.reset_index(col_level=1)\n    return df\n\n\nfig, axs = plt.subplots(6)\nfig.set_size_inches(6,12, forward=True)\nfig.set_dpi(100)\nfor i, name in enumerate(df_grouped_roll['hospital'].unique()):\n    dfn = groupby_hosp_7mean(df_grouped_roll, name)\n    fig.supxlabel('Date of admission')\n    fig.supylabel('Cases incidence')\n    axs[i].bar(dfn['date_hospitalisation'], dfn['new_cases'])\n    axs[i].plot(dfn['date_hospitalisation'], dfn['indexed_7day'], 'tab:orange')\n    axs[i].set_title(name)\n    fig.tight_layout()"
  },
  {
    "objectID": "moving_averages.html#window-is-the-day-and-6-prior-days",
    "href": "moving_averages.html#window-is-the-day-and-6-prior-days",
    "title": "Moving Average",
    "section": "window is the Day and 6 prior days",
    "text": "window is the Day and 6 prior days\n\ndf_case_cnt['indexed_7day'] = df_case_cnt['new_cases'].rolling('7D').sum()\ndf_case_cnt.head(20)\n\n\n\n\n\n  \n    \n      \n      new_cases\n      reg_7day\n      indexed_7day\n    \n    \n      date_hospitalisation\n      \n      \n      \n    \n  \n  \n    \n      2014-04-17\n      1\n      NaN\n      1.0\n    \n    \n      2014-04-20\n      1\n      NaN\n      2.0\n    \n    \n      2014-04-25\n      1\n      NaN\n      2.0\n    \n    \n      2014-04-27\n      1\n      NaN\n      2.0\n    \n    \n      2014-04-29\n      1\n      NaN\n      3.0\n    \n    \n      2014-05-02\n      1\n      NaN\n      3.0\n    \n    \n      2014-05-04\n      1\n      7.0\n      3.0\n    \n    \n      2014-05-05\n      1\n      7.0\n      4.0\n    \n    \n      2014-05-06\n      2\n      8.0\n      5.0\n    \n    \n      2014-05-08\n      2\n      9.0\n      7.0\n    \n    \n      2014-05-09\n      1\n      9.0\n      7.0\n    \n    \n      2014-05-10\n      3\n      11.0\n      10.0\n    \n    \n      2014-05-11\n      1\n      11.0\n      10.0\n    \n    \n      2014-05-13\n      4\n      14.0\n      11.0\n    \n    \n      2014-05-14\n      3\n      16.0\n      14.0\n    \n    \n      2014-05-15\n      2\n      16.0\n      14.0\n    \n    \n      2014-05-16\n      2\n      16.0\n      15.0\n    \n    \n      2014-05-17\n      2\n      17.0\n      14.0\n    \n    \n      2014-05-18\n      3\n      17.0\n      16.0\n    \n    \n      2014-05-20\n      4\n      20.0\n      16.0"
  },
  {
    "objectID": "moving_averages.html#rolling-by-group",
    "href": "moving_averages.html#rolling-by-group",
    "title": "Moving Average",
    "section": "Rolling by group",
    "text": "Rolling by group\n\ndf_grouped_roll = pd.DataFrame(list(zip(linelist['hospital'], linelist['date_hospitalisation'], linelist['case_id'])), columns=['hospital','date_hospitalisation', 'case_id'])\ndf_grouped_roll\n\n\n\n\n\n  \n    \n      \n      hospital\n      date_hospitalisation\n      case_id\n    \n  \n  \n    \n      0\n      Other\n      2014-05-15\n      5fe599\n    \n    \n      1\n      Missing\n      2014-05-14\n      8689b7\n    \n    \n      2\n      St. Mark's Maternity Hospital (SMMH)\n      2014-05-18\n      11f8ea\n    \n    \n      3\n      Port Hospital\n      2014-05-20\n      b8812a\n    \n    \n      4\n      Military Hospital\n      2014-05-22\n      893f25\n    \n    \n      ...\n      ...\n      ...\n      ...\n    \n    \n      5883\n      Military Hospital\n      2015-04-22\n      76d8fe\n    \n    \n      5884\n      Port Hospital\n      2015-04-24\n      dd6664\n    \n    \n      5885\n      Missing\n      2015-04-25\n      635ef3\n    \n    \n      5886\n      Port Hospital\n      2015-04-26\n      4b859a\n    \n    \n      5887\n      Port Hospital\n      2015-04-30\n      2068d6\n    \n  \n\n5888 rows × 3 columns\n\n\n\n\ndf_grouped_roll['hospital'].unique()\n\narray(['Other', 'Missing', \"St. Mark's Maternity Hospital (SMMH)\",\n       'Port Hospital', 'Military Hospital', 'Central Hospital'],\n      dtype=object)\n\n\n\ndf_grouped_roll_CH = df_grouped_roll.query('hospital==\"Central Hospital\"')\ndf_grouped_roll_CH = df_grouped_roll_CH.groupby('date_hospitalisation').count()\ndf_grouped_roll_CH = df_grouped_roll_CH.rename(columns={'case_id': 'new_cases'})\ndf_grouped_roll_CH['indexed_7day'] = df_grouped_roll_CH['new_cases'].rolling('7D').mean()\ndf_grouped_roll_CH.drop('hospital', axis=1, inplace=True)\ndf_grouped_roll_CH\n\n\n\n\n\n  \n    \n      \n      new_cases\n      indexed_7day\n    \n    \n      date_hospitalisation\n      \n      \n    \n  \n  \n    \n      2014-05-06\n      1\n      1.000000\n    \n    \n      2014-05-10\n      1\n      1.000000\n    \n    \n      2014-05-13\n      1\n      1.000000\n    \n    \n      2014-05-28\n      2\n      2.000000\n    \n    \n      2014-06-06\n      1\n      1.000000\n    \n    \n      ...\n      ...\n      ...\n    \n    \n      2015-04-21\n      1\n      1.333333\n    \n    \n      2015-04-22\n      1\n      1.250000\n    \n    \n      2015-04-23\n      1\n      1.200000\n    \n    \n      2015-04-26\n      2\n      1.400000\n    \n    \n      2015-04-28\n      3\n      1.750000\n    \n  \n\n216 rows × 2 columns\n\n\n\n\ndef groupby_hosp_7mean(df, hosp_name):\n    df = df.query(f'hospital==\"{hosp_name}\"')  ## important to have the double quote outside the input variable \n    df = df.groupby('date_hospitalisation').count()\n    df = df.rename(columns={'case_id': 'new_cases'})\n    df['indexed_7day'] = df['new_cases'].rolling('7D').mean()  # 7 refers to 7 index or '7D' refers to 7 days (only use 7D only if no dates are absent)\n    df.drop('hospital', axis=1, inplace=True)\n    df = df.reset_index(col_level=1)\n    return df\n\n\nfig, axs = plt.subplots(6)\nfig.set_size_inches(6,12, forward=True)\nfig.set_dpi(100)\nfor i, name in enumerate(df_grouped_roll['hospital'].unique()):\n    dfn = groupby_hosp_7mean(df_grouped_roll, name)\n    fig.supxlabel('Date of admission')\n    fig.supylabel('Cases incidence')\n    axs[i].bar(dfn['date_hospitalisation'], dfn['new_cases'])\n    axs[i].plot(dfn['date_hospitalisation'], dfn['indexed_7day'], 'tab:orange')\n    axs[i].set_title(name)\n    fig.tight_layout()\n\n\n\n\n\nMoving Average for Date Onset cases\n\ndf_onset = linelist['date_onset'].value_counts().to_frame('daily cases').reset_index().sort_values('index')\ndf_onset\n\n\n\n\n\n  \n    \n      \n      index\n      daily cases\n    \n  \n  \n    \n      362\n      2014-04-07\n      1\n    \n    \n      361\n      2014-04-15\n      1\n    \n    \n      330\n      2014-04-21\n      2\n    \n    \n      359\n      2014-04-25\n      1\n    \n    \n      358\n      2014-04-26\n      1\n    \n    \n      ...\n      ...\n      ...\n    \n    \n      224\n      2015-04-26\n      9\n    \n    \n      264\n      2015-04-27\n      7\n    \n    \n      242\n      2015-04-28\n      8\n    \n    \n      340\n      2015-04-29\n      2\n    \n    \n      343\n      2015-04-30\n      2\n    \n  \n\n367 rows × 2 columns\n\n\n\nCheck if any missing value\n\ndf_onset.isnull().sum()\n\nindex          0\ndaily cases    0\ndtype: int64\n\n\n\ndf_onset['SMA7'] = df_onset['daily cases'].rolling(7).mean() \ndf_onset.dropna(inplace=True)  # remove all NULL values at the beginning\ndf_onset\n\n\n\n\n\n  \n    \n      \n      index\n      daily cases\n      SMA7\n    \n  \n  \n    \n      344\n      2014-05-01\n      2\n      1.285714\n    \n    \n      349\n      2014-05-03\n      1\n      1.285714\n    \n    \n      366\n      2014-05-04\n      1\n      1.285714\n    \n    \n      363\n      2014-05-05\n      1\n      1.142857\n    \n    \n      317\n      2014-05-06\n      3\n      1.428571\n    \n    \n      ...\n      ...\n      ...\n      ...\n    \n    \n      224\n      2015-04-26\n      9\n      5.714286\n    \n    \n      264\n      2015-04-27\n      7\n      6.000000\n    \n    \n      242\n      2015-04-28\n      8\n      6.428571\n    \n    \n      340\n      2015-04-29\n      2\n      5.428571\n    \n    \n      343\n      2015-04-30\n      2\n      5.142857\n    \n  \n\n361 rows × 3 columns\n\n\n\n\ndf_onset.plot(x='index', y=['daily cases', 'SMA7'], figsize=(12,8))\n\n<AxesSubplot: xlabel='index'>"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "pyepi",
    "section": "",
    "text": "This file will become your README and also the index of your documentation."
  },
  {
    "objectID": "index.html#install",
    "href": "index.html#install",
    "title": "pyepi",
    "section": "Install",
    "text": "Install\npip install pyepi"
  },
  {
    "objectID": "index.html#how-to-use",
    "href": "index.html#how-to-use",
    "title": "pyepi",
    "section": "How to use",
    "text": "How to use\nFill me in please! Don’t forget code examples:\n\n1+1\n\n2"
  },
  {
    "objectID": "moving_averages.html#set-up",
    "href": "moving_averages.html#set-up",
    "title": "Moving Average",
    "section": "Set up",
    "text": "Set up\nTo use colourbind colour schemes (optional). To get the color, see https://github.com/matplotlib/matplotlib/blob/main/lib/matplotlib/mpl-data/stylelib/tableau-colorblind10.mplstyle\n\nstyle.use('tableau-colorblind10')"
  },
  {
    "objectID": "moving_averages.html#moving-average-for-date-onset-cases",
    "href": "moving_averages.html#moving-average-for-date-onset-cases",
    "title": "Moving Average",
    "section": "Moving Average for Date Onset cases",
    "text": "Moving Average for Date Onset cases\n\ndf_onset = linelist['date_onset'].value_counts().to_frame('daily cases').reset_index().sort_values('index')\ndf_onset\n\n\n\n\n\n  \n    \n      \n      index\n      daily cases\n    \n  \n  \n    \n      362\n      2014-04-07\n      1\n    \n    \n      361\n      2014-04-15\n      1\n    \n    \n      330\n      2014-04-21\n      2\n    \n    \n      359\n      2014-04-25\n      1\n    \n    \n      358\n      2014-04-26\n      1\n    \n    \n      ...\n      ...\n      ...\n    \n    \n      224\n      2015-04-26\n      9\n    \n    \n      264\n      2015-04-27\n      7\n    \n    \n      242\n      2015-04-28\n      8\n    \n    \n      340\n      2015-04-29\n      2\n    \n    \n      343\n      2015-04-30\n      2\n    \n  \n\n367 rows × 2 columns\n\n\n\nCheck if any missing value\n\ndf_onset.isnull().sum()\n\nindex          0\ndaily cases    0\ndtype: int64\n\n\n\ndf_onset['SMA7'] = df_onset['daily cases'].rolling(7).mean() \ndf_onset.dropna(inplace=True)  # remove all NULL values at the beginning\ndf_onset\n\n\n\n\n\n  \n    \n      \n      index\n      daily cases\n      SMA7\n    \n  \n  \n    \n      344\n      2014-05-01\n      2\n      1.285714\n    \n    \n      349\n      2014-05-03\n      1\n      1.285714\n    \n    \n      366\n      2014-05-04\n      1\n      1.285714\n    \n    \n      363\n      2014-05-05\n      1\n      1.142857\n    \n    \n      317\n      2014-05-06\n      3\n      1.428571\n    \n    \n      ...\n      ...\n      ...\n      ...\n    \n    \n      224\n      2015-04-26\n      9\n      5.714286\n    \n    \n      264\n      2015-04-27\n      7\n      6.000000\n    \n    \n      242\n      2015-04-28\n      8\n      6.428571\n    \n    \n      340\n      2015-04-29\n      2\n      5.428571\n    \n    \n      343\n      2015-04-30\n      2\n      5.142857\n    \n  \n\n361 rows × 3 columns\n\n\n\n\ndf_onset.plot(x='index', y=['daily cases', 'SMA7'], figsize=(12,8))\n\n<AxesSubplot: xlabel='index'>"
  },
  {
    "objectID": "moving_averages.html#moving-average-for-onset-cases-by-date",
    "href": "moving_averages.html#moving-average-for-onset-cases-by-date",
    "title": "Moving Average",
    "section": "Moving Average for Onset Cases by Date",
    "text": "Moving Average for Onset Cases by Date\n\ndf_onset = linelist['date_onset'].value_counts().to_frame('daily cases').reset_index().sort_values('index')\ndf_onset\n\n\n\n\n\n  \n    \n      \n      index\n      daily cases\n    \n  \n  \n    \n      362\n      2014-04-07\n      1\n    \n    \n      361\n      2014-04-15\n      1\n    \n    \n      330\n      2014-04-21\n      2\n    \n    \n      359\n      2014-04-25\n      1\n    \n    \n      358\n      2014-04-26\n      1\n    \n    \n      ...\n      ...\n      ...\n    \n    \n      224\n      2015-04-26\n      9\n    \n    \n      264\n      2015-04-27\n      7\n    \n    \n      242\n      2015-04-28\n      8\n    \n    \n      340\n      2015-04-29\n      2\n    \n    \n      343\n      2015-04-30\n      2\n    \n  \n\n367 rows × 2 columns\n\n\n\nCheck if any missing value\n\ndf_onset.isnull().sum()\n\nindex          0\ndaily cases    0\ndtype: int64\n\n\n\ndf_onset['SMA7'] = df_onset['daily cases'].rolling(7).mean() \ndf_onset.dropna(inplace=True)  # remove all NULL values at the beginning\ndf_onset\n\n\n\n\n\n  \n    \n      \n      index\n      daily cases\n      SMA7\n    \n  \n  \n    \n      344\n      2014-05-01\n      2\n      1.285714\n    \n    \n      349\n      2014-05-03\n      1\n      1.285714\n    \n    \n      366\n      2014-05-04\n      1\n      1.285714\n    \n    \n      363\n      2014-05-05\n      1\n      1.142857\n    \n    \n      317\n      2014-05-06\n      3\n      1.428571\n    \n    \n      ...\n      ...\n      ...\n      ...\n    \n    \n      224\n      2015-04-26\n      9\n      5.714286\n    \n    \n      264\n      2015-04-27\n      7\n      6.000000\n    \n    \n      242\n      2015-04-28\n      8\n      6.428571\n    \n    \n      340\n      2015-04-29\n      2\n      5.428571\n    \n    \n      343\n      2015-04-30\n      2\n      5.142857\n    \n  \n\n361 rows × 3 columns\n\n\n\n\ndf_onset.plot(x='index', y=['daily cases', 'SMA7'], figsize=(12,8))\n\n<AxesSubplot: xlabel='index'>"
  }
]